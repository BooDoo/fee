#!/usr/bin/env node

// Generated by CoffeeScript 1.4.0
var Application, ROOT, cwd, eliza, formatOptions, fs, isAbsolute, program, resolvePath;

fs = require('fs');

program = require('commander');

ROOT = "" + __dirname + "/..";

eliza = require(ROOT);

Application = require("" + ROOT + "/src/eliza/generators");

cwd = process.cwd();

program.version(JSON.parse(fs.readFileSync("" + ROOT + "/package.json", 'utf8')).version);

program.option('-r, --include-readme', 'Include a project README').option('-L, --no-latte', "Don't include the latte view engine").option('-b, --bare', 'Only add a controller file for a component').option('-R, --no-route', 'Do not add a route when generating a component');

program.command('new <name>').description('Create a new application <name>').action(function(name) {
  return new Application(resolvePath(name), formatOptions()).create();
});

program.command('cmpt <cmpt> [path]').description('Generate component <cmpt>, optionally at <path>/components/<cmpt>').action(function(component, path) {
  var app;
  app = new Application(resolvePath(path), formatOptions());
  return app.component(component);
});

program.command('server').description('Start the eliza server').action(function() {
  if (!(process.env.APP_ROOT != null)) {
    throw "Must define an environment variable `APP_ROOT` with the absolute path to your eliza application";
  }
  return eliza.initialize();
});

formatOptions = function() {
  return {
    bare: program.bare,
    includeRoute: program.route,
    includeLatte: program.latte,
    includeReadme: program.includeReadme
  };
};

isAbsolute = function(path) {
  return path.match(/^\//) != null;
};

resolvePath = function(path) {
  if (path == null) {
    path = cwd;
  }
  if (isAbsolute(path)) {
    return path;
  }
  return "" + cwd + "/" + path;
};

program.parse(process.argv);
