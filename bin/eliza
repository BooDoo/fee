#!/usr/bin/env node

// Generated by CoffeeScript 1.4.0
var Project, ROOT, cwd, fs, hasLeadingSlash, hasTrailingSlash, isAbsolute, normalizePaths, program, resolvePath, stripLeadingSlash, stripTrailingSlash;

fs = require('fs');

program = require('commander');

ROOT = "" + __dirname + "/..";

Project = require(ROOT);

cwd = process.cwd();

program.version(JSON.parse(fs.readFileSync("" + ROOT + "/package.json", 'utf8')).version);

program.command('new <name> [path]').description('Create a new application <name> in cwd or optionally at <path>').action(function(name, path) {
  path = resolvePath(path);
  return Project.create(normalizePaths(path, name));
});

program.command('component <component> [path]').description('Generate component <component>, optionally at <path>/components/<component>').action(function(component, path) {
  var project;
  project = new Project(resolvePath(path));
  return project.component(component);
});

isAbsolute = function(path) {
  return path.match(/^\//) != null;
};

resolvePath = function(path) {
  if (path == null) {
    path = cwd;
  }
  if (isAbsolute(path)) {
    return path;
  }
  return "" + cwd + "/" + path;
};

normalizePaths = function(path1, path2) {
  if (hasTrailingSlash(path1)) {
    path1 = stripTrailingSlash(path1);
  }
  if (hasLeadingSlash(path2)) {
    path2 = stripLeadingSlash(path2);
  }
  return "" + path1 + "/" + path2;
};

stripTrailingSlash = function(path) {
  return path.slice(0, path.length - 1);
};

stripLeadingSlash = function(path) {
  return path.slice(1, path.length);
};

hasTrailingSlash = function(path) {
  return path.match(/\/$/) != null;
};

hasLeadingSlash = function(path) {
  return path.match(/^\//) != null;
};

program.parse(process.argv);
